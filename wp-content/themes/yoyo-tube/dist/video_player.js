/*! For license information please see video_player.js.LICENSE.txt */
(function(){"use strict";var __webpack_modules__={"./assets/src/js/video-player.js":function(__unused_webpack_module,__webpack_exports__,__webpack_require__){eval('__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jquery */ "jquery");\n/* harmony import */ var jquery__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(jquery__WEBPACK_IMPORTED_MODULE_0__);\n\njquery__WEBPACK_IMPORTED_MODULE_0___default()(document).ready(function ($) {\n  var player = $("#custom-video-player");\n  var video = player.find("video")[0];\n  var playPauseBtn = player.find(".play-pause-btn");\n  var seekBar = player.find(".seek-bar");\n  var currentTime = player.find(".current-time");\n  var duration = player.find(".duration");\n  var muteBtn = player.find(".mute-btn");\n  var volumeBar = player.find(".volume-bar");\n  var fullscreenBtn = player.find(".fullscreen-btn");\n\n  // Add loading spinner\n  player.append(\'<div class="video-loading"><div class="spinner"></div></div>\');\n  var loadingSpinner = player.find(".video-loading");\n\n  // Wrap controls in a container for better alignment\n  var controls = player.find(".video-controls");\n  controls.wrapInner(\'<div class="controls-container"></div>\');\n\n  // Add a progress indicator for the seek bar\n  seekBar.before(\'<div class="seek-bar-progress"></div>\');\n  var seekBarProgress = player.find(".seek-bar-progress");\n\n  // Add a progress indicator for the volume bar\n  volumeBar.before(\'<div class="volume-bar-progress"></div>\');\n  var volumeBarProgress = player.find(".volume-bar-progress");\n  function togglePlayPause() {\n    if (video.paused) {\n      video.play();\n      updatePlayPauseIcon();\n    } else {\n      video.pause();\n      updatePlayPauseIcon();\n    }\n  }\n  function updatePlayPauseIcon() {\n    playPauseBtn.html(video.paused ? \'<i class="fas fa-play"></i>\' : \'<i class="fas fa-pause"></i>\');\n  }\n  function updateSeekBar() {\n    if (!video.duration) return;\n    var value = 100 / video.duration * video.currentTime;\n    seekBar.val(value);\n\n    // Update the progress indicator width\n    seekBarProgress.css("width", value + "%");\n    currentTime.text(formatTime(video.currentTime));\n  }\n  function seekVideo() {\n    var value = seekBar.val();\n    var time = video.duration * (value / 100);\n    video.currentTime = time;\n\n    // Update the progress indicator width\n    seekBarProgress.css("width", value + "%");\n  }\n  function formatTime(time) {\n    var minutes = Math.floor(time / 60);\n    var seconds = Math.floor(time % 60);\n    return "".concat(minutes, ":").concat(seconds < 10 ? "0" : "").concat(seconds);\n  }\n  function toggleMute() {\n    video.muted = !video.muted;\n    updateVolumeIcon();\n    updateVolumeBar();\n  }\n  function changeVolume() {\n    var value = volumeBar.val();\n    video.volume = value;\n    video.muted = video.volume === 0;\n    updateVolumeIcon();\n    updateVolumeProgress();\n  }\n  function updateVolumeBar() {\n    var value = video.muted ? 0 : video.volume;\n    volumeBar.val(value);\n    updateVolumeProgress();\n  }\n  function updateVolumeProgress() {\n    var value = video.muted ? 0 : video.volume;\n    volumeBarProgress.css("width", value * 100 + "%");\n  }\n  function updateVolumeIcon() {\n    if (video.muted || video.volume === 0) {\n      muteBtn.html(\'<i class="fas fa-volume-mute"></i>\');\n    } else if (video.volume < 0.5) {\n      muteBtn.html(\'<i class="fas fa-volume-down"></i>\');\n    } else {\n      muteBtn.html(\'<i class="fas fa-volume-up"></i>\');\n    }\n  }\n  function toggleFullscreen() {\n    if (!document.fullscreenElement) {\n      if (player[0].requestFullscreen) {\n        player[0].requestFullscreen();\n      } else if (player[0].mozRequestFullScreen) {\n        player[0].mozRequestFullScreen();\n      } else if (player[0].webkitRequestFullscreen) {\n        player[0].webkitRequestFullscreen();\n      } else if (player[0].msRequestFullscreen) {\n        player[0].msRequestFullscreen();\n      }\n      fullscreenBtn.html(\'<i class="fas fa-compress"></i>\');\n    } else {\n      if (document.exitFullscreen) {\n        document.exitFullscreen();\n      } else if (document.mozCancelFullScreen) {\n        document.mozCancelFullScreen();\n      } else if (document.webkitExitFullscreen) {\n        document.webkitExitFullscreen();\n      } else if (document.msExitFullscreen) {\n        document.msExitFullscreen();\n      }\n      fullscreenBtn.html(\'<i class="fas fa-expand"></i>\');\n    }\n  }\n  function resetPlayer() {\n    video.currentTime = 0;\n    seekBar.val(0);\n    seekBarProgress.css("width", "0%");\n    updateSeekBar();\n    updatePlayPauseIcon();\n  }\n\n  // Event listeners\n  playPauseBtn.on("click", togglePlayPause);\n  video.addEventListener("timeupdate", updateSeekBar);\n  video.addEventListener("ended", resetPlayer);\n  seekBar.on("input", seekVideo);\n  muteBtn.on("click", toggleMute);\n  volumeBar.on("input", changeVolume);\n  fullscreenBtn.on("click", toggleFullscreen);\n\n  // Video can also be toggled by clicking on it\n  $(video).on("click", togglePlayPause);\n\n  // Hide loading spinner when video is ready\n  video.addEventListener("canplay", function () {\n    loadingSpinner.fadeOut();\n  });\n  video.addEventListener("loadedmetadata", function () {\n    duration.text(formatTime(video.duration));\n    // Initialize volume bar position\n    updateVolumeBar();\n  });\n\n  // Hide controls when not hovering\n  var timeout;\n  player.on("mousemove", function () {\n    clearTimeout(timeout);\n    player.find(".video-controls").css({\n      opacity: 1,\n      transform: "translateY(0)"\n    });\n    timeout = setTimeout(function () {\n      if (!video.paused) {\n        player.find(".video-controls").css({\n          opacity: 0,\n          transform: "translateY(10px)"\n        });\n      }\n    }, 3000);\n  });\n\n  // Initial setup\n  updateVolumeIcon();\n  updatePlayPauseIcon();\n  updateVolumeProgress(); // Initialize volume progress\n\n  // Show controls when video is paused\n  video.addEventListener("pause", function () {\n    player.find(".video-controls").css({\n      opacity: 1,\n      transform: "translateY(0)"\n    });\n  });\n\n  // Handle fullscreen change events\n  document.addEventListener("fullscreenchange", adjustFullscreenVideo);\n  document.addEventListener("webkitfullscreenchange", adjustFullscreenVideo);\n  document.addEventListener("mozfullscreenchange", adjustFullscreenVideo);\n  document.addEventListener("MSFullscreenChange", adjustFullscreenVideo);\n  function adjustFullscreenVideo() {\n    if (document.fullscreenElement) {\n      // In fullscreen mode\n      $(video).css({\n        width: "100%",\n        height: "100%",\n        "max-height": "100vh"\n      });\n    } else {\n      // Exit fullscreen mode\n      $(video).css({\n        width: "100%",\n        height: "auto",\n        "max-height": "80vh"\n      });\n    }\n  }\n\n  // Add keyboard shortcuts\n  $(document).on("keydown", function (e) {\n    // Only if the video player is in viewport\n    if (player.is(":visible")) {\n      switch (e.which) {\n        case 32:\n          // Space bar\n          togglePlayPause();\n          e.preventDefault();\n          break;\n        case 77:\n          // M key\n          toggleMute();\n          e.preventDefault();\n          break;\n        case 70:\n          // F key\n          toggleFullscreen();\n          e.preventDefault();\n          break;\n        case 37:\n          // Left arrow\n          video.currentTime = Math.max(0, video.currentTime - 5);\n          e.preventDefault();\n          break;\n        case 39:\n          // Right arrow\n          video.currentTime = Math.min(video.duration, video.currentTime + 5);\n          e.preventDefault();\n          break;\n      }\n    }\n  });\n});\n\n//# sourceURL=webpack://yoyo-tube/./assets/src/js/video-player.js?')},jquery:function(e){e.exports=jQuery}},__webpack_module_cache__={};function __webpack_require__(e){var n=__webpack_module_cache__[e];if(void 0!==n)return n.exports;var r=__webpack_module_cache__[e]={exports:{}};return __webpack_modules__[e](r,r.exports,__webpack_require__),r.exports}__webpack_require__.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return __webpack_require__.d(n,{a:n}),n},__webpack_require__.d=function(e,n){for(var r in n)__webpack_require__.o(n,r)&&!__webpack_require__.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},__webpack_require__.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},__webpack_require__.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})};var __webpack_exports__=__webpack_require__("./assets/src/js/video-player.js")})();