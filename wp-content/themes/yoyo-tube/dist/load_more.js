/*! For license information please see load_more.js.LICENSE.txt */
(function(){var __webpack_modules__={"./assets/src/js/videos/load-more.js":function(){eval('jQuery(document).ready(function ($) {\n  var loadMoreBtn = $("#load-more-btn");\n  var videoGrid = $("#video-grid");\n  if (loadMoreBtn.length) {\n    loadMoreBtn.on("click", function () {\n      var button = $(this);\n      var currentPage = Number.parseInt(button.data("page"));\n      var maxPages = Number.parseInt(button.data("max"));\n      var nextPage = currentPage + 1;\n\n      // Show loading spinner\n      button.addClass("loading");\n      button.find("span").hide();\n      button.find("i").show();\n\n      // AJAX request to load more posts\n      $.ajax({\n        url: yoyo_ajax_params.ajax_url,\n        type: "POST",\n        data: {\n          action: "load_more_videos",\n          nonce: yoyo_ajax_params.nonce,\n          page: nextPage\n        },\n        success: function success(response) {\n          if (response.success) {\n            // Append new posts\n            videoGrid.append(response.data.html);\n\n            // Update button data attribute\n            button.data("page", nextPage);\n\n            // Initialize any scripts for the new content\n            if (typeof initVideoItems === "function") {\n              initVideoItems();\n            }\n\n            // Hide button if we\'ve reached the max pages\n            if (nextPage >= maxPages) {\n              button.fadeOut();\n            }\n          } else {\n            console.error("Error loading more videos:", response.data.message);\n          }\n        },\n        error: function error(xhr, status, _error) {\n          console.error("AJAX error:", _error);\n        },\n        complete: function complete() {\n          // Hide loading spinner\n          button.removeClass("loading");\n          button.find("span").show();\n          button.find("i").hide();\n        }\n      });\n    });\n  }\n\n  // Function to initialize video items (called on page load and after loading more)\n  function initVideoItems() {\n    // Add classes to video items based on price\n    var videoItems = document.querySelectorAll(".video-item:not(.initialized)");\n    videoItems.forEach(function (item) {\n      var priceElement = item.querySelector(".video-price");\n      if (priceElement) {\n        if (priceElement.textContent.includes("$")) {\n          item.classList.add("is-paid");\n          priceElement.classList.add("paid-price");\n\n          // Make price clickable to purchase\n          priceElement.addEventListener("click", function () {\n            var watchButton = this.closest(".video-item").querySelector(".video-link");\n            if (watchButton) {\n              watchButton.click();\n            }\n          });\n        } else {\n          item.classList.add("is-free");\n          priceElement.classList.add("free-price");\n        }\n      }\n\n      // Make thumbnails clickable\n      var thumbnail = item.querySelector(".video-thumbnail");\n      if (thumbnail) {\n        thumbnail.addEventListener("click", function () {\n          var watchButton = this.closest(".video-item").querySelector(".video-link");\n          if (watchButton) {\n            watchButton.click();\n          }\n        });\n      }\n\n      // Mark as initialized\n      item.classList.add("initialized");\n    });\n  }\n\n  // Initialize video items on page load\n  initVideoItems();\n});\n\n//# sourceURL=webpack://yoyo-tube/./assets/src/js/videos/load-more.js?')}},__webpack_exports__={};__webpack_modules__["./assets/src/js/videos/load-more.js"]()})();